//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 80 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `mo_about_logo`.
    var mo_about_logo: RswiftResources.ImageResource { .init(name: "mo_about_logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_account_bc_empty_icon`.
    var mo_account_bc_empty_icon: RswiftResources.ImageResource { .init(name: "mo_account_bc_empty_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_account_ew_empty_icon`.
    var mo_account_ew_empty_icon: RswiftResources.ImageResource { .init(name: "mo_account_ew_empty_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_account_gcash_icon`.
    var mo_account_gcash_icon: RswiftResources.ImageResource { .init(name: "mo_account_gcash_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_account_payma_icon`.
    var mo_account_payma_icon: RswiftResources.ImageResource { .init(name: "mo_account_payma_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_add_account_icon`.
    var mo_add_account_icon: RswiftResources.ImageResource { .init(name: "mo_add_account_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_add_n`.
    var mo_add_n: RswiftResources.ImageResource { .init(name: "mo_add_n", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_add_s`.
    var mo_add_s: RswiftResources.ImageResource { .init(name: "mo_add_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_address_checked`.
    var mo_address_checked: RswiftResources.ImageResource { .init(name: "mo_address_checked", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_arrow_right`.
    var mo_arrow_right: RswiftResources.ImageResource { .init(name: "mo_arrow_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_auth_progress_icon`.
    var mo_auth_progress_icon: RswiftResources.ImageResource { .init(name: "mo_auth_progress_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_authentication_success`.
    var mo_authentication_success: RswiftResources.ImageResource { .init(name: "mo_authentication_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_cancel_pop_bg`.
    var mo_cancel_pop_bg: RswiftResources.ImageResource { .init(name: "mo_cancel_pop_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_contact_info_icon`.
    var mo_contact_info_icon: RswiftResources.ImageResource { .init(name: "mo_contact_info_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_custom_photo_take`.
    var mo_custom_photo_take: RswiftResources.ImageResource { .init(name: "mo_custom_photo_take", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_del_account_phone`.
    var mo_del_account_phone: RswiftResources.ImageResource { .init(name: "mo_del_account_phone", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_del_account_sms`.
    var mo_del_account_sms: RswiftResources.ImageResource { .init(name: "mo_del_account_sms", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_detail_down`.
    var mo_detail_down: RswiftResources.ImageResource { .init(name: "mo_detail_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_detail_expand`.
    var mo_detail_expand: RswiftResources.ImageResource { .init(name: "mo_detail_expand", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_detail_up`.
    var mo_detail_up: RswiftResources.ImageResource { .init(name: "mo_detail_up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_feedback_icon`.
    var mo_feedback_icon: RswiftResources.ImageResource { .init(name: "mo_feedback_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_fullpayment_close`.
    var mo_fullpayment_close: RswiftResources.ImageResource { .init(name: "mo_fullpayment_close", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_fullpayment_icon`.
    var mo_fullpayment_icon: RswiftResources.ImageResource { .init(name: "mo_fullpayment_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_banner_1`.
    var mo_home_banner_1: RswiftResources.ImageResource { .init(name: "mo_home_banner_1", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_banner_2`.
    var mo_home_banner_2: RswiftResources.ImageResource { .init(name: "mo_home_banner_2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_banner_3`.
    var mo_home_banner_3: RswiftResources.ImageResource { .init(name: "mo_home_banner_3", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_feedback_bg`.
    var mo_home_feedback_bg: RswiftResources.ImageResource { .init(name: "mo_home_feedback_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_help_bg`.
    var mo_home_help_bg: RswiftResources.ImageResource { .init(name: "mo_home_help_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_loan_status_icon`.
    var mo_home_loan_status_icon: RswiftResources.ImageResource { .init(name: "mo_home_loan_status_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_loan_success`.
    var mo_home_loan_success: RswiftResources.ImageResource { .init(name: "mo_home_loan_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_marquee_icon`.
    var mo_home_marquee_icon: RswiftResources.ImageResource { .init(name: "mo_home_marquee_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_paid_failure_status_icon`.
    var mo_home_paid_failure_status_icon: RswiftResources.ImageResource { .init(name: "mo_home_paid_failure_status_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_paying_progress_status_icon`.
    var mo_home_paying_progress_status_icon: RswiftResources.ImageResource { .init(name: "mo_home_paying_progress_status_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_reject_status_icon`.
    var mo_home_reject_status_icon: RswiftResources.ImageResource { .init(name: "mo_home_reject_status_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_review_status`.
    var mo_home_review_status: RswiftResources.ImageResource { .init(name: "mo_home_review_status", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_home_top_dot`.
    var mo_home_top_dot: RswiftResources.ImageResource { .init(name: "mo_home_top_dot", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_identity_card`.
    var mo_identity_card: RswiftResources.ImageResource { .init(name: "mo_identity_card", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_identity_profile`.
    var mo_identity_profile: RswiftResources.ImageResource { .init(name: "mo_identity_profile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_lanuch_bottom`.
    var mo_lanuch_bottom: RswiftResources.ImageResource { .init(name: "mo_lanuch_bottom", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_lanuch_logo`.
    var mo_lanuch_logo: RswiftResources.ImageResource { .init(name: "mo_lanuch_logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_loan_placeholder`.
    var mo_loan_placeholder: RswiftResources.ImageResource { .init(name: "mo_loan_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_loan_success`.
    var mo_loan_success: RswiftResources.ImageResource { .init(name: "mo_loan_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_loan_success_bg`.
    var mo_loan_success_bg: RswiftResources.ImageResource { .init(name: "mo_loan_success_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_login_eye_n`.
    var mo_login_eye_n: RswiftResources.ImageResource { .init(name: "mo_login_eye_n", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_login_eye_s`.
    var mo_login_eye_s: RswiftResources.ImageResource { .init(name: "mo_login_eye_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_mine_center_profile`.
    var mo_mine_center_profile: RswiftResources.ImageResource { .init(name: "mo_mine_center_profile", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_mobile_change_success`.
    var mo_mobile_change_success: RswiftResources.ImageResource { .init(name: "mo_mobile_change_success", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_navigation_back`.
    var mo_navigation_back: RswiftResources.ImageResource { .init(name: "mo_navigation_back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_navigation_service`.
    var mo_navigation_service: RswiftResources.ImageResource { .init(name: "mo_navigation_service", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_new_service_icon`.
    var mo_new_service_icon: RswiftResources.ImageResource { .init(name: "mo_new_service_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_operate_failure`.
    var mo_operate_failure: RswiftResources.ImageResource { .init(name: "mo_operate_failure", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_pop_icon`.
    var mo_pop_icon: RswiftResources.ImageResource { .init(name: "mo_pop_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_pop_secure`.
    var mo_pop_secure: RswiftResources.ImageResource { .init(name: "mo_pop_secure", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_pre_auth_tips_icon`.
    var mo_pre_auth_tips_icon: RswiftResources.ImageResource { .init(name: "mo_pre_auth_tips_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_profile_feedback`.
    var mo_profile_feedback: RswiftResources.ImageResource { .init(name: "mo_profile_feedback", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_profile_loan_record`.
    var mo_profile_loan_record: RswiftResources.ImageResource { .init(name: "mo_profile_loan_record", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_profile_privacy`.
    var mo_profile_privacy: RswiftResources.ImageResource { .init(name: "mo_profile_privacy", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_profile_service`.
    var mo_profile_service: RswiftResources.ImageResource { .init(name: "mo_profile_service", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_profile_setting`.
    var mo_profile_setting: RswiftResources.ImageResource { .init(name: "mo_profile_setting", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_reduce_n`.
    var mo_reduce_n: RswiftResources.ImageResource { .init(name: "mo_reduce_n", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_reduce_s`.
    var mo_reduce_s: RswiftResources.ImageResource { .init(name: "mo_reduce_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_register_select`.
    var mo_register_select: RswiftResources.ImageResource { .init(name: "mo_register_select", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_register_unselect`.
    var mo_register_unselect: RswiftResources.ImageResource { .init(name: "mo_register_unselect", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repay_no_unselect`.
    var mo_repay_no_unselect: RswiftResources.ImageResource { .init(name: "mo_repay_no_unselect", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repay_selected`.
    var mo_repay_selected: RswiftResources.ImageResource { .init(name: "mo_repay_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repay_unselect`.
    var mo_repay_unselect: RswiftResources.ImageResource { .init(name: "mo_repay_unselect", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repayment_method_no`.
    var mo_repayment_method_no: RswiftResources.ImageResource { .init(name: "mo_repayment_method_no", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repayment_method_no_s`.
    var mo_repayment_method_no_s: RswiftResources.ImageResource { .init(name: "mo_repayment_method_no_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repayment_method_qr`.
    var mo_repayment_method_qr: RswiftResources.ImageResource { .init(name: "mo_repayment_method_qr", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repayment_method_qr_s`.
    var mo_repayment_method_qr_s: RswiftResources.ImageResource { .init(name: "mo_repayment_method_qr_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_repayment_method_select`.
    var mo_repayment_method_select: RswiftResources.ImageResource { .init(name: "mo_repayment_method_select", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_review_clock_icon`.
    var mo_review_clock_icon: RswiftResources.ImageResource { .init(name: "mo_review_clock_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_review_time_bg`.
    var mo_review_time_bg: RswiftResources.ImageResource { .init(name: "mo_review_time_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_service_fee_bg`.
    var mo_service_fee_bg: RswiftResources.ImageResource { .init(name: "mo_service_fee_bg", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_service_fee_icon`.
    var mo_service_fee_icon: RswiftResources.ImageResource { .init(name: "mo_service_fee_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_tab_home_n`.
    var mo_tab_home_n: RswiftResources.ImageResource { .init(name: "mo_tab_home_n", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_tab_home_s`.
    var mo_tab_home_s: RswiftResources.ImageResource { .init(name: "mo_tab_home_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_tab_mine_n`.
    var mo_tab_mine_n: RswiftResources.ImageResource { .init(name: "mo_tab_mine_n", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_tab_mine_s`.
    var mo_tab_mine_s: RswiftResources.ImageResource { .init(name: "mo_tab_mine_s", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mo_unauthentication_list`.
    var mo_unauthentication_list: RswiftResources.ImageResource { .init(name: "mo_unauthentication_list", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
            var uiSceneStoryboardFile: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneStoryboardFile") ?? "Main" }
          }
        }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 3 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `1111.png`.
    var png: RswiftResources.FileResource { .init(name: "1111", pathExtension: "png", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `html`.
    var html: RswiftResources.FileResource { .init(name: "html", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `mo_address_data`.
    var mo_address_data: RswiftResources.FileResource { .init(name: "mo_address_data", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 33 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `Moto_AccountPlaceHolder`.
    var moto_AccountPlaceHolder: RswiftResources.NibReference<Moto_AccountPlaceHolder> { .init(name: "Moto_AccountPlaceHolder", bundle: bundle) }

    /// Nib `Moto_AddressCell`.
    var moto_AddressCell: RswiftResources.NibReferenceReuseIdentifier<Moto_AddressCell, Moto_AddressCell> { .init(name: "Moto_AddressCell", bundle: bundle, identifier: "moto_address_cell") }

    /// Nib `Moto_AutoFillEmailView`.
    var moto_AutoFillEmailView: RswiftResources.NibReference<Moto_AutoFillEmailView> { .init(name: "Moto_AutoFillEmailView", bundle: bundle) }

    /// Nib `Moto_BrithDayPickerSelectView`.
    var moto_BrithDayPickerSelectView: RswiftResources.NibReference<Moto_BrithDayPickerSelectView> { .init(name: "Moto_BrithDayPickerSelectView", bundle: bundle) }

    /// Nib `Moto_CancelPopView`.
    var moto_CancelPopView: RswiftResources.NibReference<Moto_CancelPopView> { .init(name: "Moto_CancelPopView", bundle: bundle) }

    /// Nib `Moto_ContactInfoView`.
    var moto_ContactInfoView: RswiftResources.NibReference<Moto_ContactInfoView> { .init(name: "Moto_ContactInfoView", bundle: bundle) }

    /// Nib `Moto_EmailInputView`.
    var moto_EmailInputView: RswiftResources.NibReference<Moto_EmailInputView> { .init(name: "Moto_EmailInputView", bundle: bundle) }

    /// Nib `Moto_FeedSelectView`.
    var moto_FeedSelectView: RswiftResources.NibReference<Moto_FeedSelectView> { .init(name: "Moto_FeedSelectView", bundle: bundle) }

    /// Nib `Moto_FullPayView`.
    var moto_FullPayView: RswiftResources.NibReference<Moto_FullPayView> { .init(name: "Moto_FullPayView", bundle: bundle) }

    /// Nib `Moto_GenderView`.
    var moto_GenderView: RswiftResources.NibReference<Moto_GenderView> { .init(name: "Moto_GenderView", bundle: bundle) }

    /// Nib `Moto_HomeFooter`.
    var moto_HomeFooter: RswiftResources.NibReference<Moto_HomeFooter> { .init(name: "Moto_HomeFooter", bundle: bundle) }

    /// Nib `Moto_HomeInViewCell`.
    var moto_HomeInViewCell: RswiftResources.NibReferenceReuseIdentifier<Moto_HomeInViewCell, Moto_HomeInViewCell> { .init(name: "Moto_HomeInViewCell", bundle: bundle, identifier: "moto_home_inview_cell") }

    /// Nib `Moto_HomeInitalCell`.
    var moto_HomeInitalCell: RswiftResources.NibReferenceReuseIdentifier<Moto_HomeInitalCell, Moto_HomeInitalCell> { .init(name: "Moto_HomeInitalCell", bundle: bundle, identifier: "moto_home_inital_cell") }

    /// Nib `Moto_HomeRepayCell`.
    var moto_HomeRepayCell: RswiftResources.NibReferenceReuseIdentifier<Moto_HomeRepayCell, Moto_HomeRepayCell> { .init(name: "Moto_HomeRepayCell", bundle: bundle, identifier: "moto_home_repay_cell") }

    /// Nib `Moto_HomeStatusCell`.
    var moto_HomeStatusCell: RswiftResources.NibReferenceReuseIdentifier<Moto_HomeStatusCell, Moto_HomeStatusCell> { .init(name: "Moto_HomeStatusCell", bundle: bundle, identifier: "moto_home_status_cell") }

    /// Nib `Moto_IdentityView`.
    var moto_IdentityView: RswiftResources.NibReference<Moto_IdentityView> { .init(name: "Moto_IdentityView", bundle: bundle) }

    /// Nib `Moto_InputPassWordView`.
    var moto_InputPassWordView: RswiftResources.NibReference<Moto_InputPassWordView> { .init(name: "Moto_InputPassWordView", bundle: bundle) }

    /// Nib `Moto_LoanRecordCell`.
    var moto_LoanRecordCell: RswiftResources.NibReferenceReuseIdentifier<Moto_LoanRecordCell, Moto_LoanRecordCell> { .init(name: "Moto_LoanRecordCell", bundle: bundle, identifier: "moto_loan_record_cell") }

    /// Nib `Moto_LoanRecordPlaceHolder`.
    var moto_LoanRecordPlaceHolder: RswiftResources.NibReference<Moto_LoanRecordPlaceHolder> { .init(name: "Moto_LoanRecordPlaceHolder", bundle: bundle) }

    /// Nib `Moto_LoanRepayItemView`.
    var moto_LoanRepayItemView: RswiftResources.NibReference<Moto_LoanRepayItemView> { .init(name: "Moto_LoanRepayItemView", bundle: bundle) }

    /// Nib `Moto_LoanSmsCodeView`.
    var moto_LoanSmsCodeView: RswiftResources.NibReference<Moto_LoanSmsCodeView> { .init(name: "Moto_LoanSmsCodeView", bundle: bundle) }

    /// Nib `Moto_LoanTipsView`.
    var moto_LoanTipsView: RswiftResources.NibReference<Moto_LoanTipsView> { .init(name: "Moto_LoanTipsView", bundle: bundle) }

    /// Nib `Moto_OneBtnPopView`.
    var moto_OneBtnPopView: RswiftResources.NibReference<Moto_OneBtnPopView> { .init(name: "Moto_OneBtnPopView", bundle: bundle) }

    /// Nib `Moto_ReLoanPopView`.
    var moto_ReLoanPopView: RswiftResources.NibReference<Moto_ReLoanPopView> { .init(name: "Moto_ReLoanPopView", bundle: bundle) }

    /// Nib `Moto_RepayChannelView`.
    var moto_RepayChannelView: RswiftResources.NibReference<Moto_RepayChannelView> { .init(name: "Moto_RepayChannelView", bundle: bundle) }

    /// Nib `Moto_RepayTipsView`.
    var moto_RepayTipsView: RswiftResources.NibReference<Moto_RepayTipsView> { .init(name: "Moto_RepayTipsView", bundle: bundle) }

    /// Nib `Moto_RepaymentMethodView`.
    var moto_RepaymentMethodView: RswiftResources.NibReference<Moto_RepaymentMethodView> { .init(name: "Moto_RepaymentMethodView", bundle: bundle) }

    /// Nib `Moto_RepaytermView`.
    var moto_RepaytermView: RswiftResources.NibReference<Moto_RepaytermView> { .init(name: "Moto_RepaytermView", bundle: bundle) }

    /// Nib `Moto_SelectInfoCell`.
    var moto_SelectInfoCell: RswiftResources.NibReferenceReuseIdentifier<Moto_SelectInfoCell, Moto_SelectInfoCell> { .init(name: "Moto_SelectInfoCell", bundle: bundle, identifier: "moto_select_info_cell") }

    /// Nib `Moto_SelectInfoView`.
    var moto_SelectInfoView: RswiftResources.NibReference<Moto_SelectInfoView> { .init(name: "Moto_SelectInfoView", bundle: bundle) }

    /// Nib `Moto_SelectInputView`.
    var moto_SelectInputView: RswiftResources.NibReference<Moto_SelectInputView> { .init(name: "Moto_SelectInputView", bundle: bundle) }

    /// Nib `Moto_ServiceFeeView`.
    var moto_ServiceFeeView: RswiftResources.NibReference<Moto_ServiceFeeView> { .init(name: "Moto_ServiceFeeView", bundle: bundle) }

    /// Nib `Moto_UserAccountListCell`.
    var moto_UserAccountListCell: RswiftResources.NibReferenceReuseIdentifier<Moto_UserAccountListCell, Moto_UserAccountListCell> { .init(name: "Moto_UserAccountListCell", bundle: bundle, identifier: "moto_user_account_list_cell") }

    func validate() throws {
      if UIKit.UIImage(named: "mo_add_account_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_add_account_icon' is used in nib 'Moto_AccountPlaceHolder', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_cancel_pop_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_cancel_pop_bg' is used in nib 'Moto_CancelPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_arrow_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_arrow_right' is used in nib 'Moto_ContactInfoView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_contact_info_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_contact_info_icon' is used in nib 'Moto_ContactInfoView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_fullpayment_close", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_fullpayment_close' is used in nib 'Moto_FullPayView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_home_feedback_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_home_feedback_bg' is used in nib 'Moto_HomeFooter', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_home_help_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_home_help_bg' is used in nib 'Moto_HomeFooter', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_home_review_status", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_home_review_status' is used in nib 'Moto_HomeInViewCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_home_top_dot", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_home_top_dot' is used in nib 'Moto_HomeInitalCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_cancel_pop_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_cancel_pop_bg' is used in nib 'Moto_InputPassWordView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_pop_secure", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_pop_secure' is used in nib 'Moto_InputPassWordView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_loan_placeholder", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_loan_placeholder' is used in nib 'Moto_LoanRecordPlaceHolder', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_cancel_pop_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_cancel_pop_bg' is used in nib 'Moto_LoanSmsCodeView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_pop_secure", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_pop_secure' is used in nib 'Moto_LoanSmsCodeView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_loan_success", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_loan_success' is used in nib 'Moto_OneBtnPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_loan_success_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_loan_success_bg' is used in nib 'Moto_OneBtnPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_loan_success_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_loan_success_bg' is used in nib 'Moto_ReLoanPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_login_eye_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_login_eye_n' is used in nib 'Moto_ReLoanPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_login_eye_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_login_eye_s' is used in nib 'Moto_ReLoanPopView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_repayment_method_select", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_repayment_method_select' is used in nib 'Moto_RepaymentMethodView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_repay_unselect", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_repay_unselect' is used in nib 'Moto_RepaytermView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_arrow_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_arrow_right' is used in nib 'Moto_SelectInputView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "mo_service_fee_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_service_fee_bg' is used in nib 'Moto_ServiceFeeView', but couldn't be loaded.") }
    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 8 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `moto_address_cell`.
    let moto_address_cell: RswiftResources.ReuseIdentifier<Moto_AddressCell> = .init(identifier: "moto_address_cell")

    /// Reuse identifier `moto_home_inital_cell`.
    let moto_home_inital_cell: RswiftResources.ReuseIdentifier<Moto_HomeInitalCell> = .init(identifier: "moto_home_inital_cell")

    /// Reuse identifier `moto_home_inview_cell`.
    let moto_home_inview_cell: RswiftResources.ReuseIdentifier<Moto_HomeInViewCell> = .init(identifier: "moto_home_inview_cell")

    /// Reuse identifier `moto_home_repay_cell`.
    let moto_home_repay_cell: RswiftResources.ReuseIdentifier<Moto_HomeRepayCell> = .init(identifier: "moto_home_repay_cell")

    /// Reuse identifier `moto_home_status_cell`.
    let moto_home_status_cell: RswiftResources.ReuseIdentifier<Moto_HomeStatusCell> = .init(identifier: "moto_home_status_cell")

    /// Reuse identifier `moto_loan_record_cell`.
    let moto_loan_record_cell: RswiftResources.ReuseIdentifier<Moto_LoanRecordCell> = .init(identifier: "moto_loan_record_cell")

    /// Reuse identifier `moto_select_info_cell`.
    let moto_select_info_cell: RswiftResources.ReuseIdentifier<Moto_SelectInfoCell> = .init(identifier: "moto_select_info_cell")

    /// Reuse identifier `moto_user_account_list_cell`.
    let moto_user_account_list_cell: RswiftResources.ReuseIdentifier<Moto_UserAccountListCell> = .init(identifier: "moto_user_account_list_cell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 5 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var home: home { .init(bundle: bundle) }
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }
    var mine: mine { .init(bundle: bundle) }
    var register: register { .init(bundle: bundle) }

    func home(bundle: Foundation.Bundle) -> home {
      .init(bundle: bundle)
    }
    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func mine(bundle: Foundation.Bundle) -> mine {
      .init(bundle: bundle)
    }
    func register(bundle: Foundation.Bundle) -> register {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.home.validate()
      try self.launchScreen.validate()
      try self.main.validate()
      try self.mine.validate()
      try self.register.validate()
    }


    /// Storyboard `Home`.
    struct home: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Home"

      var home: RswiftResources.StoryboardViewControllerIdentifier<Moto_NavigatonController> { .init(identifier: "home", storyboard: name, bundle: bundle) }
      var moto_account_list: RswiftResources.StoryboardViewControllerIdentifier<Moto_AccountListViewController> { .init(identifier: "moto_account_list", storyboard: name, bundle: bundle) }
      var moto_add_account: RswiftResources.StoryboardViewControllerIdentifier<Moto_AddUserAccountViewController> { .init(identifier: "moto_add_account", storyboard: name, bundle: bundle) }
      var moto_address_info: RswiftResources.StoryboardViewControllerIdentifier<Moto_AddressInfoViewController> { .init(identifier: "moto_address_info", storyboard: name, bundle: bundle) }
      var moto_address_select: RswiftResources.StoryboardViewControllerIdentifier<Moto_AddressSelectViewController> { .init(identifier: "moto_address_select", storyboard: name, bundle: bundle) }
      var moto_auth_center: RswiftResources.StoryboardViewControllerIdentifier<Moto_AuthCenterViewController> { .init(identifier: "moto_auth_center", storyboard: name, bundle: bundle) }
      var moto_basic: RswiftResources.StoryboardViewControllerIdentifier<Moto_BasicViewController> { .init(identifier: "moto_basic", storyboard: name, bundle: bundle) }
      var moto_contact_info: RswiftResources.StoryboardViewControllerIdentifier<Moto_ContactViewController> { .init(identifier: "moto_contact_info", storyboard: name, bundle: bundle) }
      var moto_custom_photo: RswiftResources.StoryboardViewControllerIdentifier<Moto_CustomPhotoController> { .init(identifier: "moto_custom_photo", storyboard: name, bundle: bundle) }
      var moto_identify: RswiftResources.StoryboardViewControllerIdentifier<Moto_IdentityViewController> { .init(identifier: "moto_identify", storyboard: name, bundle: bundle) }
      var moto_jon_info: RswiftResources.StoryboardViewControllerIdentifier<Moto_JobViewController> { .init(identifier: "moto_jon_info", storyboard: name, bundle: bundle) }
      var moto_loan: RswiftResources.StoryboardViewControllerIdentifier<Moto_LoanViewController> { .init(identifier: "moto_loan", storyboard: name, bundle: bundle) }
      var moto_pre_auth: RswiftResources.StoryboardViewControllerIdentifier<Moto_PreAuthViewController> { .init(identifier: "moto_pre_auth", storyboard: name, bundle: bundle) }
      var moto_preliminary: RswiftResources.StoryboardViewControllerIdentifier<Moto_PreliminaryViewController> { .init(identifier: "moto_preliminary", storyboard: name, bundle: bundle) }
      var moto_repay: RswiftResources.StoryboardViewControllerIdentifier<Moto_RepayViewController> { .init(identifier: "moto_repay", storyboard: name, bundle: bundle) }
      var moto_repayment: RswiftResources.StoryboardViewControllerIdentifier<Moto_RepaymentViewController> { .init(identifier: "moto_repayment", storyboard: name, bundle: bundle) }
      var moto_withdraw: RswiftResources.StoryboardViewControllerIdentifier<Moto_WithdrawViewController> { .init(identifier: "moto_withdraw", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "mo_add_account_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_add_account_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_add_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_add_n' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_add_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_add_s' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_arrow_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_arrow_right' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_auth_progress_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_auth_progress_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_custom_photo_take", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_custom_photo_take' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_detail_down", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_detail_down' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_fullpayment_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_fullpayment_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_home_marquee_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_home_marquee_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_navigation_back", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_navigation_back' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_pre_auth_tips_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_pre_auth_tips_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_reduce_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_reduce_n' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_reduce_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_reduce_s' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_register_select", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_register_select' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_register_unselect", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_register_unselect' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_review_clock_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_review_clock_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_review_time_bg", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_review_time_bg' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_service_fee_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_service_fee_icon' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_tab_home_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_tab_home_n' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_tab_home_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_tab_home_s' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_unauthentication_list", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_unauthentication_list' is used in storyboard 'Home', but couldn't be loaded.") }
        if home() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'home' could not be loaded from storyboard 'Home' as 'Moto_NavigatonController'.") }
        if moto_account_list() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_account_list' could not be loaded from storyboard 'Home' as 'Moto_AccountListViewController'.") }
        if moto_add_account() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_add_account' could not be loaded from storyboard 'Home' as 'Moto_AddUserAccountViewController'.") }
        if moto_address_info() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_address_info' could not be loaded from storyboard 'Home' as 'Moto_AddressInfoViewController'.") }
        if moto_address_select() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_address_select' could not be loaded from storyboard 'Home' as 'Moto_AddressSelectViewController'.") }
        if moto_auth_center() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_auth_center' could not be loaded from storyboard 'Home' as 'Moto_AuthCenterViewController'.") }
        if moto_basic() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_basic' could not be loaded from storyboard 'Home' as 'Moto_BasicViewController'.") }
        if moto_contact_info() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_contact_info' could not be loaded from storyboard 'Home' as 'Moto_ContactViewController'.") }
        if moto_custom_photo() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_custom_photo' could not be loaded from storyboard 'Home' as 'Moto_CustomPhotoController'.") }
        if moto_identify() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_identify' could not be loaded from storyboard 'Home' as 'Moto_IdentityViewController'.") }
        if moto_jon_info() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_jon_info' could not be loaded from storyboard 'Home' as 'Moto_JobViewController'.") }
        if moto_loan() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_loan' could not be loaded from storyboard 'Home' as 'Moto_LoanViewController'.") }
        if moto_pre_auth() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_pre_auth' could not be loaded from storyboard 'Home' as 'Moto_PreAuthViewController'.") }
        if moto_preliminary() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_preliminary' could not be loaded from storyboard 'Home' as 'Moto_PreliminaryViewController'.") }
        if moto_repay() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_repay' could not be loaded from storyboard 'Home' as 'Moto_RepayViewController'.") }
        if moto_repayment() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_repayment' could not be loaded from storyboard 'Home' as 'Moto_RepaymentViewController'.") }
        if moto_withdraw() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_withdraw' could not be loaded from storyboard 'Home' as 'Moto_WithdrawViewController'.") }
      }
    }

    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "mo_lanuch_bottom", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_lanuch_bottom' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_lanuch_logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_lanuch_logo' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = Moto_TabBarController

      let bundle: Foundation.Bundle

      let name = "Main"

      var moto_web: RswiftResources.StoryboardViewControllerIdentifier<Moto_WebViewController> { .init(identifier: "moto_web", storyboard: name, bundle: bundle) }

      func validate() throws {
        if moto_web() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_web' could not be loaded from storyboard 'Main' as 'Moto_WebViewController'.") }
      }
    }

    /// Storyboard `Mine`.
    struct mine: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Mine"

      var mine: RswiftResources.StoryboardViewControllerIdentifier<Moto_NavigatonController> { .init(identifier: "mine", storyboard: name, bundle: bundle) }
      var mo_change_mobile_failure: RswiftResources.StoryboardViewControllerIdentifier<Moto_ChangeMobileFailureViewController> { .init(identifier: "mo_change_mobile_failure", storyboard: name, bundle: bundle) }
      var moto_about: RswiftResources.StoryboardViewControllerIdentifier<Moto_AboutViewController> { .init(identifier: "moto_about", storyboard: name, bundle: bundle) }
      var moto_change_mobile: RswiftResources.StoryboardViewControllerIdentifier<Moto_ChangeMobileViewController> { .init(identifier: "moto_change_mobile", storyboard: name, bundle: bundle) }
      var moto_change_mobile_success: RswiftResources.StoryboardViewControllerIdentifier<Moto_ChangeMobileSuccessViewController> { .init(identifier: "moto_change_mobile_success", storyboard: name, bundle: bundle) }
      var moto_delete: RswiftResources.StoryboardViewControllerIdentifier<Moto_DeleteAccountViewController> { .init(identifier: "moto_delete", storyboard: name, bundle: bundle) }
      var moto_feed: RswiftResources.StoryboardViewControllerIdentifier<Moto_FeedViewController> { .init(identifier: "moto_feed", storyboard: name, bundle: bundle) }
      var moto_feed_collection: RswiftResources.StoryboardViewControllerIdentifier<Moto_FeedCollectionViewController> { .init(identifier: "moto_feed_collection", storyboard: name, bundle: bundle) }
      var moto_feed_pro: RswiftResources.StoryboardViewControllerIdentifier<Moto_FeedProViewController> { .init(identifier: "moto_feed_pro", storyboard: name, bundle: bundle) }
      var moto_loan_record: RswiftResources.StoryboardViewControllerIdentifier<Moto_LoanRecordViewController> { .init(identifier: "moto_loan_record", storyboard: name, bundle: bundle) }
      var moto_setup: RswiftResources.StoryboardViewControllerIdentifier<Moto_SetupViewController> { .init(identifier: "moto_setup", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "mo_about_logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_about_logo' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_arrow_right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_arrow_right' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_del_account_phone", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_del_account_phone' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_del_account_sms", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_del_account_sms' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_feedback_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_feedback_icon' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_login_eye_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_login_eye_s' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_mine_center_profile", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_mine_center_profile' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_mobile_change_success", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_mobile_change_success' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_operate_failure", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_operate_failure' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_pop_secure", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_pop_secure' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_profile_feedback", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_profile_feedback' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_profile_loan_record", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_profile_loan_record' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_profile_privacy", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_profile_privacy' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_profile_service", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_profile_service' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_profile_setting", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_profile_setting' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_tab_mine_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_tab_mine_n' is used in storyboard 'Mine', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_tab_mine_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_tab_mine_s' is used in storyboard 'Mine', but couldn't be loaded.") }
        if mine() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'mine' could not be loaded from storyboard 'Mine' as 'Moto_NavigatonController'.") }
        if mo_change_mobile_failure() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'mo_change_mobile_failure' could not be loaded from storyboard 'Mine' as 'Moto_ChangeMobileFailureViewController'.") }
        if moto_about() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_about' could not be loaded from storyboard 'Mine' as 'Moto_AboutViewController'.") }
        if moto_change_mobile() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_change_mobile' could not be loaded from storyboard 'Mine' as 'Moto_ChangeMobileViewController'.") }
        if moto_change_mobile_success() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_change_mobile_success' could not be loaded from storyboard 'Mine' as 'Moto_ChangeMobileSuccessViewController'.") }
        if moto_delete() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_delete' could not be loaded from storyboard 'Mine' as 'Moto_DeleteAccountViewController'.") }
        if moto_feed() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_feed' could not be loaded from storyboard 'Mine' as 'Moto_FeedViewController'.") }
        if moto_feed_collection() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_feed_collection' could not be loaded from storyboard 'Mine' as 'Moto_FeedCollectionViewController'.") }
        if moto_feed_pro() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_feed_pro' could not be loaded from storyboard 'Mine' as 'Moto_FeedProViewController'.") }
        if moto_loan_record() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_loan_record' could not be loaded from storyboard 'Mine' as 'Moto_LoanRecordViewController'.") }
        if moto_setup() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_setup' could not be loaded from storyboard 'Mine' as 'Moto_SetupViewController'.") }
      }
    }

    /// Storyboard `Register`.
    struct register: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "Register"

      var moto_forget: RswiftResources.StoryboardViewControllerIdentifier<Moto_ForgetViewController> { .init(identifier: "moto_forget", storyboard: name, bundle: bundle) }
      var moto_login: RswiftResources.StoryboardViewControllerIdentifier<Moto_LoginViewController> { .init(identifier: "moto_login", storyboard: name, bundle: bundle) }
      var moto_register: RswiftResources.StoryboardViewControllerIdentifier<Moto_RegisterViewController> { .init(identifier: "moto_register", storyboard: name, bundle: bundle) }
      var moto_set_passwd: RswiftResources.StoryboardViewControllerIdentifier<Moto_SetPasswdViewController> { .init(identifier: "moto_set_passwd", storyboard: name, bundle: bundle) }

      func validate() throws {
        if UIKit.UIImage(named: "mo_login_eye_n", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_login_eye_n' is used in storyboard 'Register', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_login_eye_s", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_login_eye_s' is used in storyboard 'Register', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_register_select", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_register_select' is used in storyboard 'Register', but couldn't be loaded.") }
        if UIKit.UIImage(named: "mo_register_unselect", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'mo_register_unselect' is used in storyboard 'Register', but couldn't be loaded.") }
        if moto_forget() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_forget' could not be loaded from storyboard 'Register' as 'Moto_ForgetViewController'.") }
        if moto_login() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_login' could not be loaded from storyboard 'Register' as 'Moto_LoginViewController'.") }
        if moto_register() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_register' could not be loaded from storyboard 'Register' as 'Moto_RegisterViewController'.") }
        if moto_set_passwd() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'moto_set_passwd' could not be loaded from storyboard 'Register' as 'Moto_SetPasswdViewController'.") }
      }
    }
  }
}